# 0 "ejemplo.pml"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 0 "<command-line>" 2
# 1 "ejemplo.pml"
mtype = {red, yellow, green};
mtype lightv=red;
mtype lighth=red;


 active proctype V() {

 atomic{
  do
  :: if
   :: lightv==red-> lightv=green
   :: lightv==yellow -> lightv=red
   :: lightv==green -> lightv=yellow
   fi;


  printf("The light vertical is now %e\n",lightv)
  od;
 }
 }


inline wait(sem) {
 atomic {
  sem;
  sem=false
 }
}

inline signal(sem) {
 sem=true
}




active proctype H() {

do
:: if
 :: lighth==red-> lighth=green
 :: lighth==yellow -> lighth=red
 :: lighth==green -> lighth=yellow
 fi;

printf("The light horizontal is now %e\n",lighth)
od;
}
